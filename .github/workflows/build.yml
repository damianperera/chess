name: release
on:
  push:
    branches: ["main"]
    paths-ignore: ["**/*.md", "**/*.yml"] # Ignore changes to markdown and workflow files
  workflow_dispatch:
  
jobs:
  # Build job
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache dependencies
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: client/desktop/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        working-directory: client/desktop/
        run: npm ci
      - name: Build
        working-directory: client/desktop/
        run: npm run build
      - name: Package
        working-directory: client/desktop/
        run: tar -zcvf build-${{ runner.os }}.tar.gz build
      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: build-${{ runner.os }}
          path: client/desktop/build-${{ runner.os }}.tar.gz
          retention-days: ${{ inputs.retention-days }}
  # Release job
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download macOS artifact
      uses: actions/download-artifact@v2
      with:
        name: build-macOS
    - name: Download Windows artifact
      uses: actions/download-artifact@v2
      with:
        name: build-Windows
    - name: Extract artifacts
      run: |
        mkdir osx
        mkdir windows
        tar xzf build-macOS.tar.gz -C osx/
        tar xzf build-Windows.tar.gz -C windows/
        ls -lR | more
    - name: Repackage distributibles
      run: |
        mkdir dist
        cp osx/build/osx-arm/Chess.com-darwin-arm64/Chess.com.app dist/Chess.com-macOS-arm64.app
        cp osx/build/osx-intel/Chess.com-darwin-x64/Chess.com.app dist/Chess.com-macOS-x64.app
        cp windows/build/win64/Chess.com-win32-x64/Chess.com.exe dist/Chess.com-Windows-x64.exe
        ls -lR | more
    - name: Create release tag
      id: create_tag
      run: |
        echo "::set-output name=tag::$(date +%Y.%m.%d.%H%M%S)"
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.tag }}
        release_name: ${{ steps.create_tag.outputs.tag }}
        draft: true
        prerelease: false
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/Chess.com-macOS-arm64.app
          dist/Chess.com-macOS-x64.app
          dist/Chess.com-Windows-x64.exe
    - name: Publish release
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}
